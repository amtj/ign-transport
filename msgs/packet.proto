package ignition.transport.msgs;

import "publisher.proto";

/// \ingroup ignition_transport_msgs
/// \interface HeaderData
/// \brief A message storing header data for packets. Used in Discovery.

message HeaderData
{
	/// \brief Type of message.
	required uint32 type    = 1;

	/// \brief Version of discovery.
	///        protobuf does not support uint16, but if the numbers stay
	///        in uint16 range they are stored as efficiently as a uint16
	required uint32 version = 2;

	/// \brief Process uuid.
	required string pUuid   = 3;

	/// \brief Pptional flags.
	///        protobuf does not support uint16, but if the numbers stay
	///        in uint16 range they are stored as efficiently as a uint16
	optional uint32 flags   = 4;
}

/// \ingroup ignition_transport_msgs
/// \interface MessageData
/// \brief A message storing message data. Used in Discovery.

message MessageData
{
	/// \brief Header of message.
	required HeaderData header       = 1;

	/// \brief Topic name.
	optional string topic            = 2;

	/// \brief Publisher data.
	optional PublisherData publisher = 3;
}
